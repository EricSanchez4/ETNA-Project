{"ast":null,"code":"var _jsxFileName = \"/Users/amelieroynette/OCEANET_PROJECT/front/src/components/upload-files.component.js\";\nimport React, { Component } from \"react\";\nimport UploadService from \"../services/upload-files.service\";\nexport default class UploadFiles extends Component {\n  constructor(props) {\n    super(props);\n    this.selectFile = this.selectFile.bind(this);\n    this.upload = this.upload.bind(this);\n    this.state = {\n      selectedFiles: undefined,\n      currentFile: undefined,\n      progress: 0,\n      message: \"\"\n    };\n  }\n\n  selectFile(event) {\n    this.setState({\n      selectedFiles: event.target.files\n    });\n  }\n\n  upload() {\n    let currentFile = this.state.selectedFiles[0];\n    this.setState({\n      progress: 0,\n      currentFile: currentFile\n    });\n    UploadService.upload(currentFile, event => {\n      this.setState({\n        progress: Math.round(100 * event.loaded / event.total)\n      });\n    }).then(response => {\n      this.setState({\n        message: response.data.message\n      });\n      let blob = new Blob([response.data], {\n        type: 'text/plain'\n      }),\n          url = window.URL.createObjectURL(blob);\n      window.open(\"http://localhost:8000/get_output/\"); //UploadService.download()\n    }).catch(e => {\n      console.log(e);\n      this.setState({\n        progress: 0,\n        message: \"Could not upload the file!\",\n        currentFile: undefined\n      });\n    });\n    this.setState({\n      selectedFiles: undefined\n    });\n  }\n\n  render() {\n    const {\n      selectedFiles,\n      currentFile,\n      progress,\n      message\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 7\n      }\n    }, currentFile && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"progress\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"progress-bar progress-bar-info progress-bar-striped\",\n      role: \"progressbar\",\n      \"aria-valuenow\": progress,\n      \"aria-valuemin\": \"0\",\n      \"aria-valuemax\": \"100\",\n      style: {\n        width: progress + \"%\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 13\n      }\n    }, progress, \"%\")), /*#__PURE__*/React.createElement(\"label\", {\n      className: \"btn btn-default\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"file\",\n      onChange: this.selectFile,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn btn-success\",\n      disabled: !selectedFiles,\n      onClick: this.upload,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }\n    }, \"Upload\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"alert alert-light\",\n      role: \"alert\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }\n    }, message));\n  }\n\n}","map":{"version":3,"sources":["/Users/amelieroynette/OCEANET_PROJECT/front/src/components/upload-files.component.js"],"names":["React","Component","UploadService","UploadFiles","constructor","props","selectFile","bind","upload","state","selectedFiles","undefined","currentFile","progress","message","event","setState","target","files","Math","round","loaded","total","then","response","data","blob","Blob","type","url","window","URL","createObjectURL","open","catch","e","console","log","render","width"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport UploadService from \"../services/upload-files.service\";\n\nexport default class UploadFiles extends Component {\n  constructor(props) {\n    super(props);\n    this.selectFile = this.selectFile.bind(this);\n    this.upload = this.upload.bind(this);\n\n    this.state = {\n      selectedFiles: undefined,\n      currentFile: undefined,\n      progress: 0,\n      message: \"\",\n\n    };\n  }\n\n  selectFile(event) {\n    this.setState({\n      selectedFiles: event.target.files,\n    });\n  }\n\n  upload() {\n    let currentFile = this.state.selectedFiles[0];\n\n    this.setState({\n      progress: 0,\n      currentFile: currentFile,\n    });\n\n    UploadService.upload(currentFile, (event) => {\n      this.setState({\n        progress: Math.round((100 * event.loaded) / event.total),\n      });\n    })\n      .then((response) => {\n        this.setState({\n          message: response.data.message,\n        });\n        let blob = new Blob([response.data], { type: 'text/plain' }),\n        url = window.URL.createObjectURL(blob)\n\n        window.open(\"http://localhost:8000/get_output/\")\n        //UploadService.download()\n      })\n      .catch((e) => {\n        console.log(e)\n        this.setState({\n          progress: 0,\n          message: \"Could not upload the file!\",\n          currentFile: undefined,\n        });\n      });\n\n    this.setState({\n      selectedFiles: undefined,\n    });\n  }\n\n  render() {\n    const {\n      selectedFiles,\n      currentFile,\n      progress,\n      message,\n    } = this.state;\n\n    return (\n      <div>\n        {currentFile && (\n          <div className=\"progress\">\n            <div\n              className=\"progress-bar progress-bar-info progress-bar-striped\"\n              role=\"progressbar\"\n              aria-valuenow={progress}\n              aria-valuemin=\"0\"\n              aria-valuemax=\"100\"\n              style={{ width: progress + \"%\" }}\n            >\n              {progress}%\n            </div>\n          </div>\n        )}\n\n        <label className=\"btn btn-default\">\n          <input type=\"file\" onChange={this.selectFile} />\n        </label>\n\n        <button\n          className=\"btn btn-success\"\n          disabled={!selectedFiles}\n          onClick={this.upload}\n        >\n          Upload\n        </button>\n\n        <div className=\"alert alert-light\" role=\"alert\">\n          {message}\n        </div>\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}